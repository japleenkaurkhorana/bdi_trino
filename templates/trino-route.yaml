---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "update-trino-route"
  namespace: "b-{{ .Release.Name }}-in"
spec:
  schedule: "* * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: update-route
              image: docker.stackable.tech/stackable/testing-tools:0.2.0-stackable24.11.0
              command: ["bash"]
              args:
                - '-x'
                - '-c'
                - "cat /data/route <(echo) <(sed 's/^/      /' /tls/ca.crt) | kubectl apply -f -"
              volumeMounts:
                - mountPath: /tls
                  name: tls
                - mountPath: /data
                  name: route
              resources:
                limits:
                  cpu: 100m
                  memory: 200Mi
          serviceAccountName: route-serviceaccount
          volumes:
            - name: route
              configMap:
                name: trinoroute
            - name: tls
              ephemeral:
                volumeClaimTemplate:
                  metadata:
                    annotations:
                      secrets.stackable.tech/class: tls
                      secrets.stackable.tech/scope: pod
                  spec:
                    storageClassName: secrets.stackable.tech
                    accessModes:
                      - ReadWriteOnce
                    resources:
                      requests:
                        storage: "1"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: route-serviceaccount
  namespace: "b-{{ .Release.Name }}-in"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: route-rolebinding
  namespace: "b-{{ .Release.Name }}-in"
subjects:
  - kind: ServiceAccount
    name: route-serviceaccount
    namespace: "b-{{ .Release.Name }}-in"
roleRef:
  kind: Role
  name: route-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: route-role
  namespace: "b-{{ .Release.Name }}-in"
rules:
  - apiGroups:
      - "route.openshift.io"
    resources:
      - "*"
    verbs:
      - 'get'
      - 'create'
      - 'patch'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: trinoroute
  namespace: "b-{{ .Release.Name }}-in"
data:
  route: |-
    kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: trino
    spec:
      to:
        kind: Service
        name: trino-coordinator
      port:
        targetPort: https
      tls:
        termination: reencrypt
        destinationCACertificate: |-